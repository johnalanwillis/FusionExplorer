#!/bin/bash/
#generates a decoder file to be parsed by fusiontools
#takes a list of fusioncaller ouptput locations an an input
#the list is generated by the getFusionCallerOutputs.sh script
#the decoder parses filnames to generate a TSV with 5 columns
#SAMPLE_ID
#PATIENT_ID
#TIMEPOINT
#BATCH
#FILELOC

set -eou pipefail

#############Define Vars###############
inputLoc=$1
targetFlag=$2
outputLoc=$3


#We'll record the date for recordkeeping purposes

jobDate=$(date +%Y-%m-%d)

#the input fileList is looped over to generate the parsed output
header="SAMPLE_ID\tPATIENT_ID\tTIMEPOINT\tBATCH\tFILELOC"
FILELOCstem="/mnt/mobydisk/groupshares/alee/shared/ovarian_Cancer_Project/tumor_Samples/"

#the type of output to be parsed is specified by the targetFlag
#f indicates a FusionCatcher job
#S indicates a STARFusion job
#of indicates an oncofuse processed fusioncatcher job
#os indicates an oncofuse processed starfusion job
if echo "${targetFlag}" | grep -q "of"; then
    targetProg="oncofuse_fusionCatcher"
    outputFile="${outputLoc}""decoder""${targetProg}""_""${jobDate}"".txt"
elif echo "${targetFlag}" | grep -q "os"; then
    targetProg="oncofuse_starFusion"
    outputFile="${outputLoc}""decoder""${targetProg}""_""${jobDate}"".txt"
elif echo "${targetFlag}" | grep -q "f"; then
    targetProg="fusionCatcher"
    outputFile="${outputLoc}""decoder""${targetProg}""_""${jobDate}"".txt"
elif echo "${targetFlag}" | grep -q "s"; then
    targetProg="starFusion"
    outputFile="${outputLoc}""decoder""${targetProg}""_""${jobDate}"".txt"
fi

printf "%s\t%s\t%s\t%s\t%s\n" "SAMPLE_ID" "PATIENT_ID" "TIMEPOINT" "BATCH" "FILELOC" > "${outputFile}"

while read sample
do

FILELOC="${sample}"

#The parser is written to record absolute file locations, so the filelist should be generated upstream of tumor_Samples/ to allow that
#we construct the input and output based on the paired directory structure
if echo "${sample}" | grep -q "AOCS"; then
  
  BATCH="AOCS"
  SAMPLE_ID=$(echo "${sample}" | sed -e 's/.*\(AOCS-OV-[0-9][0-9][0-9][0-9]-[0-9][0-9]\).*/\1/')
  PATIENT_ID=$(echo "${sample}" | sed -e 's/.*AOCS-OV-\([0-9][0-9][0-9][0-9]\).*/\1/')

  if echo "${sample}" | grep -q "02"; then
    TIMEPOINT="Late"
  else
    TIMEPOINT="Early"
  fi

elif echo "${sample}" | grep -q "TCGA"; then
  
  BATCH="TCGA"
  SAMPLE_ID=$(echo "${sample}" | sed -e 's/.*\(TCGA-[0-9][0-9]-[0-9][0-9][0-9][0-9]-[0-9][0-9]\).*/\1/')
  PATIENT_ID=$(echo "${sample}" | sed -e 's/.*TCGA-\([0-9][0-9]-[0-9][0-9][0-9][0-9]\).*/\1/')

  if echo "${sample}" | grep -q "02"; then
    TIMEPOINT="Late"
  else
    TIMEPOINT="Early"
  fi

elif echo "${sample}" | grep -q "CCLE"; then
  BATCH="CCLE"
  TIMEPOINT="None"

elif echo "${sample}" | grep -q "OVCA_"; then

  BATCH="FROZEN"
  SAMPLE_ID=$(echo "${sample}" | sed -e 's/.*\(OVCA_[0-9][0-9]_[A-Z][0-9]\).*/\1/')
  PATIENT_ID=$(echo "${sample}" | sed -e 's/.*\(OVCA_[0-9][0-9]\)_[A-Z][0-9].*/\1/')


  if echo "${sample}" | grep -q "L[1-2]"; then
    TIMEPOINT="Late"
  else
    TIMEPOINT="Early"
  fi

fi

printf '%s\t%s\t%s\t%s\t%s\n' "${SAMPLE_ID}" "${PATIENT_ID}" "${TIMEPOINT}" "${BATCH}" "${FILELOC}" >> "${outputFile}"

done < "${inputLoc}"
